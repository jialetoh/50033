"use strict";(self.webpackChunksite_docusaurus_template=self.webpackChunksite_docusaurus_template||[]).push([[2218],{4440:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>p,contentTitle:()=>s,default:()=>h,frontMatter:()=>i,metadata:()=>l,toc:()=>u});var o=a(7462),n=(a(7294),a(3905)),r=(a(1694),a(6596),a(6533),a(505),a(1496));a(4866),a(5162);const i={sidebar_position:5},s="Checkoff",l={unversionedId:"children/checkoff",id:"children/checkoff",title:"Checkoff",description:"As usual, the grading for this lab is binary (completed or not completed). This means you should implement all features above to obtain the mark. In this checkoff, the features we are looking for are: meaningful player feedback, multiple scenes in the game, some kind of persistent data (could be highscore, user setting, etc), existence of interactable powerups (can be anything that benefits the player or introduce dilemma), and properly polished game restart functionality.",source:"@site/docs/04-children/checkoff.md",sourceDirName:"04-children",slug:"/children/checkoff",permalink:"/50033/docs/children/checkoff",draft:!1,tags:[],version:"current",sidebarPosition:5,frontMatter:{sidebar_position:5},sidebar:"tutorialSidebar",previous:{title:"Polishing with Coroutines",permalink:"/50033/docs/children/coroutines"},next:{title:"Unity for Teens",permalink:"/50033/docs/category/unity-for-teens"}},p={},u=[{value:"Good Player Feedback",id:"good-player-feedback",level:3},{value:"Navigate Between Scenes",id:"navigate-between-scenes",level:3},{value:"Persistent Highscore",id:"persistent-highscore",level:3},{value:"Powerup",id:"powerup",level:3},{value:"Game Polishing",id:"game-polishing",level:3},{value:"Next Time",id:"next-time",level:2}],c={toc:u},d="wrapper";function h(e){let{components:t,...a}=e;return(0,n.kt)(d,(0,o.Z)({},c,a,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("h1",{id:"checkoff"},"Checkoff"),(0,n.kt)("admonition",{title:"Grading notes",type:"caution"},(0,n.kt)("p",{parentName:"admonition"},"As usual, the grading for this lab is ",(0,n.kt)("strong",{parentName:"p"},"binary")," (completed or not completed). This means you should implement ",(0,n.kt)("span",{className:"orange-bold"},"all features")," above to obtain the mark. In this checkoff, the features we are looking for are: meaningful player feedback, multiple scenes in the game, some kind of persistent data (could be highscore, user setting, etc), existence of interactable powerups (can be anything that benefits the player or introduce dilemma), and properly polished game restart functionality.")),(0,n.kt)("p",null,"You are free to utilise whatever you have learned in this topic to implement the following (turn on the volume):"),(0,n.kt)(r.Z,{path:"https://50033.s3.ap-southeast-1.amazonaws.com/week-4/checkoff.mp4",widthPercentage:"100%",mdxType:"VideoItem"}),(0,n.kt)("p",null,"Your submission must have ",(0,n.kt)("strong",{parentName:"p"},"all")," the following features to gain fullmarks (and not exceeding 5 minutes length):"),(0,n.kt)("h3",{id:"good-player-feedback"},"Good Player Feedback"),(0,n.kt)("p",null,"Have sound effect (please record your audio) for the most part (don't have to be 100% SMB accurate):"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"Game paused/play background sound stopping and starting"),(0,n.kt)("li",{parentName:"ul"},"Powerups spawning (coin or mushroom)"),(0,n.kt)("li",{parentName:"ul"},"Goomba dying"),(0,n.kt)("li",{parentName:"ul"},"Game Over")),(0,n.kt)("h3",{id:"navigate-between-scenes"},"Navigate Between Scenes"),(0,n.kt)("p",null,"Have a main menu and a loading scene (design is up to you) before the main game. The loading scene should allow you to go back to the main menu"),(0,n.kt)("h3",{id:"persistent-highscore"},"Persistent Highscore"),(0,n.kt)("p",null,"Have have a ",(0,n.kt)("strong",{parentName:"p"},"persistent highscore")," that can be reset in the main menu. Persistent means: when stopped and started again in unity editor, the same value stays. You also need to have at least ",(0,n.kt)("strong",{parentName:"p"},"two")," worlds where ",(0,n.kt)("strong",{parentName:"p"},"current")," score can be properly ",(0,n.kt)("strong",{parentName:"p"},"carried over")," (show it)."),(0,n.kt)("h3",{id:"powerup"},"Powerup"),(0,n.kt)("p",null,"Have at least ",(0,n.kt)("strong",{parentName:"p"},"two")," powerup system: Coin, Starman, Mushroom, or Invisible Brick (1-UP mushroom), any 2 or any other designs you want. Fix the powerup ",(0,n.kt)("strong",{parentName:"p"},"bug")," described (or show that you don't have such bug, approach the powerup from both above and below the box)."),(0,n.kt)("h3",{id:"game-polishing"},"Game Polishing"),(0,n.kt)("p",null,"Restart should work ",(0,n.kt)("strong",{parentName:"p"},"properly"),": reset ALL Goombas, all powerups, music, and current score. You need to utilise Scriptable Object as part of your solution (show your code editor or inspector while recording)."),(0,n.kt)("h2",{id:"next-time"},"Next Time"),(0,n.kt)("admonition",{title:"\ud83e\udd14",type:"think"},(0,n.kt)("p",{parentName:"admonition"},"What to do next?")),(0,n.kt)("p",null,"We have learned quite a bit of things in the past month to implement most general stuffs we need in a game. We ",(0,n.kt)("em",{parentName:"p"},"can")," make a game and google (or ChatGPT) along the way as we go to make most games work, but there's one last thing to touch: that is to ",(0,n.kt)("em",{parentName:"p"},"properly")," separate your data from your code for even better management. In game development, various architectural patterns and frameworks are used to structure and organize code for managing game objects, scenes, and gameplay mechanics. We will explore one design pattern that leverages Scriptable Objects to create ",(0,n.kt)("strong",{parentName:"p"},"flexible")," and ",(0,n.kt)("strong",{parentName:"p"},"reusable")," systems for defining and configuring game objects and their behaviors."))}h.isMDXComponent=!0}}]);