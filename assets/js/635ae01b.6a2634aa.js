"use strict";(self.webpackChunksite_docusaurus_template=self.webpackChunksite_docusaurus_template||[]).push([[5716],{5162:(e,t,a)=>{a.d(t,{Z:()=>s});var n=a(7294),r=a(6010);const o={tabItem:"tabItem_Ymn6"};function s(e){let{children:t,hidden:a,className:s}=e;return n.createElement("div",{role:"tabpanel",className:(0,r.default)(o.tabItem,s),hidden:a},t)}},4866:(e,t,a)=>{a.d(t,{Z:()=>w});var n=a(7462),r=a(7294),o=a(6010),s=a(2466),l=a(6550),i=a(1980),u=a(7392),c=a(12);function m(e){return function(e){return r.Children.map(e,(e=>{if(!e||(0,r.isValidElement)(e)&&function(e){const{props:t}=e;return!!t&&"object"==typeof t&&"value"in t}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)}))?.filter(Boolean)??[]}(e).map((e=>{let{props:{value:t,label:a,attributes:n,default:r}}=e;return{value:t,label:a,attributes:n,default:r}}))}function d(e){const{values:t,children:a}=e;return(0,r.useMemo)((()=>{const e=t??m(a);return function(e){const t=(0,u.l)(e,((e,t)=>e.value===t.value));if(t.length>0)throw new Error(`Docusaurus error: Duplicate values "${t.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e}),[t,a])}function p(e){let{value:t,tabValues:a}=e;return a.some((e=>e.value===t))}function f(e){let{queryString:t=!1,groupId:a}=e;const n=(0,l.k6)(),o=function(e){let{queryString:t=!1,groupId:a}=e;if("string"==typeof t)return t;if(!1===t)return null;if(!0===t&&!a)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return a??null}({queryString:t,groupId:a});return[(0,i._X)(o),(0,r.useCallback)((e=>{if(!o)return;const t=new URLSearchParams(n.location.search);t.set(o,e),n.replace({...n.location,search:t.toString()})}),[o,n])]}function h(e){const{defaultValue:t,queryString:a=!1,groupId:n}=e,o=d(e),[s,l]=(0,r.useState)((()=>function(e){let{defaultValue:t,tabValues:a}=e;if(0===a.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(t){if(!p({value:t,tabValues:a}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${t}" but none of its children has the corresponding value. Available values are: ${a.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return t}const n=a.find((e=>e.default))??a[0];if(!n)throw new Error("Unexpected error: 0 tabValues");return n.value}({defaultValue:t,tabValues:o}))),[i,u]=f({queryString:a,groupId:n}),[m,h]=function(e){let{groupId:t}=e;const a=function(e){return e?`docusaurus.tab.${e}`:null}(t),[n,o]=(0,c.Nk)(a);return[n,(0,r.useCallback)((e=>{a&&o.set(e)}),[a,o])]}({groupId:n}),b=(()=>{const e=i??m;return p({value:e,tabValues:o})?e:null})();(0,r.useLayoutEffect)((()=>{b&&l(b)}),[b]);return{selectedValue:s,selectValue:(0,r.useCallback)((e=>{if(!p({value:e,tabValues:o}))throw new Error(`Can't select invalid tab value=${e}`);l(e),u(e),h(e)}),[u,h,o]),tabValues:o}}var b=a(2389);const k={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};function g(e){let{className:t,block:a,selectedValue:l,selectValue:i,tabValues:u}=e;const c=[],{blockElementScrollPositionUntilNextRender:m}=(0,s.o5)(),d=e=>{const t=e.currentTarget,a=c.indexOf(t),n=u[a].value;n!==l&&(m(t),i(n))},p=e=>{let t=null;switch(e.key){case"Enter":d(e);break;case"ArrowRight":{const a=c.indexOf(e.currentTarget)+1;t=c[a]??c[0];break}case"ArrowLeft":{const a=c.indexOf(e.currentTarget)-1;t=c[a]??c[c.length-1];break}}t?.focus()};return r.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,o.default)("tabs",{"tabs--block":a},t)},u.map((e=>{let{value:t,label:a,attributes:s}=e;return r.createElement("li",(0,n.Z)({role:"tab",tabIndex:l===t?0:-1,"aria-selected":l===t,key:t,ref:e=>c.push(e),onKeyDown:p,onClick:d},s,{className:(0,o.default)("tabs__item",k.tabItem,s?.className,{"tabs__item--active":l===t})}),a??t)})))}function y(e){let{lazy:t,children:a,selectedValue:n}=e;const o=(Array.isArray(a)?a:[a]).filter(Boolean);if(t){const e=o.find((e=>e.props.value===n));return e?(0,r.cloneElement)(e,{className:"margin-top--md"}):null}return r.createElement("div",{className:"margin-top--md"},o.map(((e,t)=>(0,r.cloneElement)(e,{key:t,hidden:e.props.value!==n}))))}function v(e){const t=h(e);return r.createElement("div",{className:(0,o.default)("tabs-container",k.tabList)},r.createElement(g,(0,n.Z)({},e,t)),r.createElement(y,(0,n.Z)({},e,t)))}function w(e){const t=(0,b.Z)();return r.createElement(v,(0,n.Z)({key:String(t)},e))}},3678:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>u,contentTitle:()=>l,default:()=>p,frontMatter:()=>s,metadata:()=>i,toc:()=>c});var n=a(7462),r=(a(7294),a(3905)),o=(a(1694),a(6596),a(6533),a(505),a(1496));a(4866),a(5162);const s={sidebar_position:4},l="Checkoff",i={unversionedId:"newborns/checkoff",id:"newborns/checkoff",title:"Checkoff",description:"Once you've implemented everything in this handout, then for checkoff you're required to add one new feature",source:"@site/docs/01-newborns/checkoff.md",sourceDirName:"01-newborns",slug:"/newborns/checkoff",permalink:"/50033/docs/newborns/checkoff",draft:!1,tags:[],version:"current",sidebarPosition:4,frontMatter:{sidebar_position:4},sidebar:"tutorialSidebar",previous:{title:"User Interface",permalink:"/50033/docs/newborns/ui"},next:{title:"Unity for Babies",permalink:"/50033/docs/category/unity-for-babies"}},u={},c=[{value:"Housekeeping",id:"housekeeping",level:3},{value:"Next Time",id:"next-time",level:2}],m={toc:c},d="wrapper";function p(e){let{components:t,...a}=e;return(0,r.kt)(d,(0,n.Z)({},m,a,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"checkoff"},"Checkoff"),(0,r.kt)("p",null,"Once you've implemented everything in this handout, then for ",(0,r.kt)("strong",{parentName:"p"},"checkoff")," you're required to add one new feature: A \"Game Over\" screen (can be overlaying canvas that's hidden when game starts) when Mario hits Goomba. In this GameOver screen, we should have:"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},"Score highlighted"),(0,r.kt)("li",{parentName:"ol"},"Restart button highlighted")),(0,r.kt)("p",null,"You\u2019re free to implement it in any way you want. It will not affect your checkoff score. The grading for this lab is ",(0,r.kt)("strong",{parentName:"p"},"binary")," (completed or not completed). Here's a sample result:"),(0,r.kt)(o.Z,{path:"https://50033.s3.ap-southeast-1.amazonaws.com/week-1/complete-checkoff-1.mp4",widthPercentage:"100%",mdxType:"VideoItem"}),(0,r.kt)("admonition",{title:"Grading notes",type:"caution"},(0,r.kt)("p",{parentName:"admonition"},"The grading for this lab is ",(0,r.kt)("strong",{parentName:"p"},"binary")," (completed or not completed). This means you should implement ",(0,r.kt)("span",{className:"orange-bold"},"all features")," above to obtain the mark.")),(0,r.kt)("h3",{id:"housekeeping"},"Housekeeping"),(0,r.kt)("p",null,"While Debug messages are useful, please ",(0,r.kt)("strong",{parentName:"p"},"clean them up")," once you're done with the features. Manage your Scene with proper GameObject hierarchies. Manage your files under ",(0,r.kt)("inlineCode",{parentName:"p"},"Project")," window properly too. For these lab series, we neatly manage our scripts and scenes by Week."),(0,r.kt)("h2",{id:"next-time"},"Next Time"),(0,r.kt)("admonition",{title:"\ud83e\udd14",type:"think"},(0,r.kt)("p",{parentName:"admonition"},"What to do next?")),(0,r.kt)("p",null,"It's been hours but we are nowhere near a completed game (unless of course you have prior experience with Unity):"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"No ",(0,r.kt)("strong",{parentName:"li"},"sound effect")," or ",(0,r.kt)("strong",{parentName:"li"},"animation")," (lack of visual feedback)"),(0,r.kt)("li",{parentName:"ul"},"No ",(0,r.kt)("strong",{parentName:"li"},"platforms")," implemented yet (it's a platformer game!)"),(0,r.kt)("li",{parentName:"ul"},"There\u2019s ",(0,r.kt)("strong",{parentName:"li"},"no game manager")," of any sort, and ",(0,r.kt)("inlineCode",{parentName:"li"},"score")," is sloppily stored in ",(0,r.kt)("inlineCode",{parentName:"li"},"JumpOverGoomba.cs")),(0,r.kt)("li",{parentName:"ul"},"There\u2019s no ",(0,r.kt)("em",{parentName:"li"},"centralised")," way for keeping track of ",(0,r.kt)("strong",{parentName:"li"},"states")," (score, player state, etc), every component is referring to every other component. This is ",(0,r.kt)("span",{className:"orange-bold"},"disastrous"),"."),(0,r.kt)("li",{parentName:"ul"},"The \u201cEnemy\u201d is kinda predictable or boring, and Mario's scoring system doesn't work that way.")),(0,r.kt)("p",null,"We will try to improve our game and learn some common C# coding practices in the next few parts."))}p.isMDXComponent=!0}}]);