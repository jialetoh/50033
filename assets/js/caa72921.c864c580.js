"use strict";(self.webpackChunksite_docusaurus_template=self.webpackChunksite_docusaurus_template||[]).push([[8835],{82223:(e,t,r)=>{r.d(t,{A:()=>s});r(96540);var a=r(18215);const n={tabItem:"tabItem_Ymn6"};var o=r(74848);function s(e){let{children:t,hidden:r,className:s}=e;return(0,o.jsx)("div",{role:"tabpanel",className:(0,a.A)(n.tabItem,s),hidden:r,children:t})}},72206:(e,t,r)=>{r.d(t,{A:()=>j});var a=r(96540),n=r(18215),o=r(80052),s=r(56347),i=r(35793),l=r(99025),u=r(4430),c=r(44148);function d(e){return a.Children.toArray(e).filter((e=>"\n"!==e)).map((e=>{if(!e||(0,a.isValidElement)(e)&&function(e){const{props:t}=e;return!!t&&"object"==typeof t&&"value"in t}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)}))?.filter(Boolean)??[]}function h(e){const{values:t,children:r}=e;return(0,a.useMemo)((()=>{const e=t??function(e){return d(e).map((e=>{let{props:{value:t,label:r,attributes:a,default:n}}=e;return{value:t,label:r,attributes:a,default:n}}))}(r);return function(e){const t=(0,u.XI)(e,((e,t)=>e.value===t.value));if(t.length>0)throw new Error(`Docusaurus error: Duplicate values "${t.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e}),[t,r])}function f(e){let{value:t,tabValues:r}=e;return r.some((e=>e.value===t))}function m(e){let{queryString:t=!1,groupId:r}=e;const n=(0,s.W6)(),o=function(e){let{queryString:t=!1,groupId:r}=e;if("string"==typeof t)return t;if(!1===t)return null;if(!0===t&&!r)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return r??null}({queryString:t,groupId:r});return[(0,l.aZ)(o),(0,a.useCallback)((e=>{if(!o)return;const t=new URLSearchParams(n.location.search);t.set(o,e),n.replace({...n.location,search:t.toString()})}),[o,n])]}function p(e){const{defaultValue:t,queryString:r=!1,groupId:n}=e,o=h(e),[s,l]=(0,a.useState)((()=>function(e){let{defaultValue:t,tabValues:r}=e;if(0===r.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(t){if(!f({value:t,tabValues:r}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${t}" but none of its children has the corresponding value. Available values are: ${r.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return t}const a=r.find((e=>e.default))??r[0];if(!a)throw new Error("Unexpected error: 0 tabValues");return a.value}({defaultValue:t,tabValues:o}))),[u,d]=m({queryString:r,groupId:n}),[p,b]=function(e){let{groupId:t}=e;const r=function(e){return e?`docusaurus.tab.${e}`:null}(t),[n,o]=(0,c.Dv)(r);return[n,(0,a.useCallback)((e=>{r&&o.set(e)}),[r,o])]}({groupId:n}),g=(()=>{const e=u??p;return f({value:e,tabValues:o})?e:null})();(0,i.A)((()=>{g&&l(g)}),[g]);return{selectedValue:s,selectValue:(0,a.useCallback)((e=>{if(!f({value:e,tabValues:o}))throw new Error(`Can't select invalid tab value=${e}`);l(e),d(e),b(e)}),[d,b,o]),tabValues:o}}var b=r(75251);const g={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};var y=r(74848);function w(e){let{className:t,block:r,selectedValue:a,selectValue:s,tabValues:i}=e;const l=[],{blockElementScrollPositionUntilNextRender:u}=(0,o.a_)(),c=e=>{const t=e.currentTarget,r=l.indexOf(t),n=i[r].value;n!==a&&(u(t),s(n))},d=e=>{let t=null;switch(e.key){case"Enter":c(e);break;case"ArrowRight":{const r=l.indexOf(e.currentTarget)+1;t=l[r]??l[0];break}case"ArrowLeft":{const r=l.indexOf(e.currentTarget)-1;t=l[r]??l[l.length-1];break}}t?.focus()};return(0,y.jsx)("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,n.A)("tabs",{"tabs--block":r},t),children:i.map((e=>{let{value:t,label:r,attributes:o}=e;return(0,y.jsx)("li",{role:"tab",tabIndex:a===t?0:-1,"aria-selected":a===t,ref:e=>{l.push(e)},onKeyDown:d,onClick:c,...o,className:(0,n.A)("tabs__item",g.tabItem,o?.className,{"tabs__item--active":a===t}),children:r??t},t)}))})}function v(e){let{lazy:t,children:r,selectedValue:o}=e;const s=(Array.isArray(r)?r:[r]).filter(Boolean);if(t){const e=s.find((e=>e.props.value===o));return e?(0,a.cloneElement)(e,{className:(0,n.A)("margin-top--md",e.props.className)}):null}return(0,y.jsx)("div",{className:"margin-top--md",children:s.map(((e,t)=>(0,a.cloneElement)(e,{key:t,hidden:e.props.value!==o})))})}function x(e){const t=p(e);return(0,y.jsxs)("div",{className:(0,n.A)("tabs-container",g.tabList),children:[(0,y.jsx)(w,{...t,...e}),(0,y.jsx)(v,{...t,...e})]})}function j(e){const t=(0,b.A)();return(0,y.jsx)(x,{...e,children:d(e.children)},String(t))}},30329:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>c,contentTitle:()=>u,default:()=>f,frontMatter:()=>l,metadata:()=>a,toc:()=>d});const a=JSON.parse('{"id":"teen/checkoff","title":"Checkoff","description":"The grading for this lab is binary (completed or not completed) for each feature. This means you should implement each feature fully to obtain the mark for that feature. If you\'re already experienced with Unity and would like to experiment, you\'re free to implement similar features. In this checkoff, the feature we are looking for are: usage of Scriptable Object Game Architecture, usage of Pluggable FSM (must be at least as complex as the checkoff requirements below, similar number of states and transitions etc). Show it clearly in your recording by either showing your inspector for Mario when playing the game, or show us relevant scripts on your code editor for a few seconds.","source":"@site/docs/05-teen/checkoff.md","sourceDirName":"05-teen","slug":"/teen/checkoff","permalink":"/50033/docs/teen/checkoff","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":3,"frontMatter":{"sidebar_position":3},"sidebar":"tutorialSidebar","previous":{"title":"Finite State Machine","permalink":"/50033/docs/teen/fsm"}}');var n=r(74848),o=r(28453),s=(r(53398),r(19894),r(88761)),i=(r(89166),r(384));r(72206),r(82223);const l={sidebar_position:3},u="Checkoff",c={},d=[{value:"Implement Buffs and Powerups",id:"implement-buffs-and-powerups",level:3},{value:"Utilise Scriptable Object Game Architecture",id:"utilise-scriptable-object-game-architecture",level:3},{value:"Maintain Sound Effects",id:"maintain-sound-effects",level:3},{value:"Summary",id:"summary",level:2}];function h(e){const t={a:"a",admonition:"admonition",code:"code",em:"em",h1:"h1",h2:"h2",h3:"h3",header:"header",p:"p",strong:"strong",...(0,o.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(t.header,{children:(0,n.jsx)(t.h1,{id:"checkoff",children:"Checkoff"})}),"\n",(0,n.jsxs)(t.admonition,{title:"Grading notes",type:"caution",children:[(0,n.jsxs)(t.p,{children:["The grading for this lab is ",(0,n.jsx)(t.strong,{children:"binary"})," (completed or not completed) ",(0,n.jsx)(t.strong,{children:"for each feature"}),". This means you should implement each ",(0,n.jsx)("span",{className:"orange-bold",children:"feature"})," fully to obtain the mark for that feature. If you're already experienced with Unity and would like to experiment, you're free to implement similar features. In this checkoff, the feature we are looking for are: ",(0,n.jsx)(t.strong,{children:"usage"})," of Scriptable Object Game Architecture, ",(0,n.jsx)(t.strong,{children:"usage"})," of Pluggable FSM (must be at least as complex as the checkoff requirements below, similar number of states and transitions etc). Show it clearly in your recording by either showing your inspector for Mario when playing the game, or show us relevant scripts on your code editor for a few seconds."]}),(0,n.jsxs)(t.p,{children:["We ",(0,n.jsx)("span",{className:"orange-bold",children:"also"})," want you to demonstrate that there exist some kind of collectibles or powerup or buffs that will disappear after a few seconds. Game or level restart must also be demonstrated where every single component goes back to its original state. Don't worry, we are ",(0,n.jsx)(t.em,{children:"lenient"})," and will give you the marks as long as we see some form of the requested feature."]})]}),"\n",(0,n.jsx)(t.p,{children:"You are free to utilise whatever you have learned in this topic to implement the following (turn on the volume):"}),"\n",(0,n.jsx)(i.A,{path:"https://50033.s3.ap-southeast-1.amazonaws.com/week-5/checkoff.mp4",widthPercentage:"100%"}),"\n",(0,n.jsx)(t.p,{children:"Your submission must have all the following features to gain fullmarks (and not exceeding 5 minutes length):"}),"\n",(0,n.jsx)(t.h3,{id:"implement-buffs-and-powerups",children:"Implement Buffs and Powerups"}),"\n",(0,n.jsx)(t.p,{children:"You are required to implement the FSM as per these diagrams shown in the previous section:"}),"\n",(0,n.jsx)(s.A,{path:r(6286).A,customClass:"invert-color",widthPercentage:"50%"}),"\n",(0,n.jsxs)(t.p,{children:["These buffs are controlled using another FSM (not ",(0,n.jsx)(t.code,{children:"MarioStateController"}),"). You need to create a new script inheriting ",(0,n.jsx)(t.code,{children:"StateController"}),", e.g: ",(0,n.jsx)(t.code,{children:"BuffStateController"})," and attach it to Mario to manage his buffs:"]}),"\n",(0,n.jsx)(s.A,{path:r(32731).A,customClass:"invert-color",widthPercentage:"30%"}),"\n",(0,n.jsx)(t.h3,{id:"utilise-scriptable-object-game-architecture",children:"Utilise Scriptable Object Game Architecture"}),"\n",(0,n.jsxs)(t.p,{children:["Your lab should ",(0,n.jsx)("span",{className:"orange-bold",children:"not"})," contain any Singleton anymore. Demonstrate it clearly by recording your Hierarchy Window (there will be no ",(0,n.jsx)(t.code,{children:"DontDestroyOnLoad"})," section). You must demonstrate that you can navigate between multiple scenes and values will persist."]}),"\n",(0,n.jsx)(t.h3,{id:"maintain-sound-effects",children:"Maintain Sound Effects"}),"\n",(0,n.jsxs)(t.p,{children:["You should record ",(0,n.jsx)("span",{className:"orange-bold",children:"with sound"})," and demonstrate that each state change results in reasonable sound effects. You don't have to download more audio clips, you can just use the ones we have given to you."]}),"\n",(0,n.jsx)(t.h2,{id:"summary",children:"Summary"}),"\n",(0,n.jsx)(t.admonition,{title:"\ud83e\udd14",type:"think",children:(0,n.jsx)(t.p,{children:"What to do next?"})}),"\n",(0,n.jsxs)(t.p,{children:["This is our ",(0,n.jsx)("span",{className:"orange-bold",children:"final lab"}),", congratulations for making it this far \ud83c\udf89\ud83c\udf7e. You are fully equipped now to complete actual World-1-1 on your own and document your lab properly so it might be useful for you in the future. You should start thinking about the architecture of your game project from now on, and polish your game idea. Prototype and ideate on paper / tablet first before jumping straight into digital prototype."]}),"\n",(0,n.jsxs)(t.p,{children:["If you would like to read more about other game architectures, ",(0,n.jsx)(t.a,{href:"https://resources.unity.com/games/level-up-your-code-with-game-programming-patterns?ungated=true",children:"this e-book by Unity is a great source to start"}),". There are plenty of other programming patterns that we can't cover in the Labs, such as the Factory, MVP (Model View Presenter), and Command patterns."]}),"\n",(0,n.jsxs)(t.p,{children:["Be sure also to check out ",(0,n.jsx)(t.a,{href:"https://unity.com/how-to",children:(0,n.jsx)(t.strong,{children:"Unity Best Practices"})})," that suits your game. We will populate our websites Resources tab in the weeks to come too based on selected articles on these sources so stay tuned."]})]})}function f(e={}){const{wrapper:t}={...(0,o.R)(),...e.components};return t?(0,n.jsx)(t,{...e,children:(0,n.jsx)(h,{...e})}):h(e)}},32731:(e,t,r)=>{r.d(t,{A:()=>a});const a=r.p+"assets/images/mario-fsm-buffs-d0af36603b4c35c5b73f66ed87b9e63f.png"},6286:(e,t,r)=>{r.d(t,{A:()=>a});const a=r.p+"assets/images/mario-fsm-6c2b94b9794fdfa0d4d3b8b8ea2ef1cb.png"}}]);